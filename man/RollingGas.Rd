% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RollingGas.R
\name{RollingGas}
\alias{RollingGas}
\title{RollingGas Class}
\arguments{
\item{windows}{Vector of windows that will be applied on features.}

\item{workers}{Number of workers. Greater than 1 for parallle processing}

\item{lag}{Lag variable in runner package.}

\item{at}{Argument at in runner package.}

\item{gas_dist}{Dist parametere in UniGASSpec fucntionUniGASSpec.}

\item{gas_scaling}{Scaling parametere in UniGASSpec fucntionUniGASSpec.}

\item{prediction_horizont}{GAS prediction horizont.}

\item{df}{A data.table object with GAS results.}

\item{colname_prefix}{Prefix for column names}

\item{x}{Ohlcv object.}

\item{window}{Rolling window lengths.}

\item{price_col}{Prcie column in Ohlcv}

\item{params}{Vector of parameters}
}
\value{
A new `RollingGas` object.

Calculate rolling GAS features from GAS package.

Calculate rolling radf features from exuber package.
}
\description{
Function calculates GAS risk values from GAS package on rolling window.

Create a new RollingExuber object.

Help function for Rolling GAS

Function calculates radf values from exuber package on rolling window.
}
\section{Fields}{

\describe{
\item{\code{gas_dist}}{Dist parametere in UniGASSpec fucntionUniGASSpec.}

\item{\code{gas_scaling}}{Scaling parametere in UniGASSpec fucntionUniGASSpec.}

\item{\code{prediction_horizont}}{GAS prediction horizont.}

\item{\code{GASSpec}}{Defined internally}
}}

\examples{
data(spy_hour)
OhlcvInstance = Ohlcv$new(spy_hour, date_col = "datetime")
RollingGasInit = RollingGas$new(windows = 200,
                                workers = 1L,
                                at = c(300, 500),
                                lag = 0L,
                                gas_dist = "sstd",
                                gas_scaling = "Identity",
                                prediction_horizont = 10)
x = RollingGasInit$get_rolling_features(OhlcvInstance)
head(x)
RollingGasInit = RollingGas$new(windows = 200,
                                workers = 2L,
                                at = c(300, 500),
                                lag = 0L,
                                gas_dist = c("std", "sstd"),
                                gas_scaling = "Identity",
                                prediction_horizont = 10)
x = RollingGasInit$get_rolling_features(OhlcvInstance)
head(x)
}
