% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RollingWaveletArima.R
\name{RollingWaveletArima}
\alias{RollingWaveletArima}
\title{RollingWaveletArima Class}
\arguments{
\item{windows}{Vector of windows that will be applied on features.}

\item{workers}{Number of threads.}

\item{lag}{Argument lag in runner package.}

\item{at}{Argument at in runner package.}

\item{na_pad}{Argument na_pad in runner package.}

\item{simplify}{Argument simplify in runner package.}

\item{filter}{Wavelet filter use in the decomposition.}

\item{Waveletlevels}{The level of wavelet decomposition.}

\item{MaxARParam}{The maximum AR order for auto.arima.}

\item{MaxMAParam}{The maximum MA order for auto.arima.}

\item{NForecast}{Forecast horizont.}

\item{data}{X field of Ohlcv object}

\item{window}{window length. This argument is given internaly}

\item{price}{Prcie column in Ohlcv}
}
\value{
A new `RollingForecats` object.

Calculate rolling features from forecasting package.
}
\description{
Function calculates forecastas based on WaveletArima package.

Create a new RollingForecats object.

Function calculates forecastas based on auto.arima and nnetar functions from forecast package.
}
\section{Fields}{

\describe{
\item{\code{filter}}{Wavelet filter use in the decomposition.}

\item{\code{Waveletlevels}}{The level of wavelet decomposition.}

\item{\code{MaxARParam}}{The maximum AR order for auto.arima.}

\item{\code{MaxMAParam}}{The maximum MA order for auto.arima.}

\item{\code{NForecast}}{Forecast horizont.}
}}

\examples{
data(spy_hour)
OhlcvInstance = Ohlcv$new(spy_hour, date_col = "datetime")
RollingWaveletArimaInstance = RollingWaveletArima$new(windows = c(10, 20),
                                                      workers = 2L,
                                                      lag = 1L,
                                                      at = c(100:110, 200:210),
                                                      na_pad = TRUE,
                                                      simplify = FALSE,
                                                      filter = "haar")
x = RollingWaveletArimaInstance$get_rolling_features(OhlcvInstance)
head(x)
}
