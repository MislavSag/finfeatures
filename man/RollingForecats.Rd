% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RollingForecats.R
\name{RollingForecats}
\alias{RollingForecats}
\title{RollingForecats Class}
\arguments{
\item{windows}{Vector of windows that will be applied on features.}

\item{workers}{Number of threads.}

\item{lag}{Argument lag in runner package.}

\item{at}{Argument at in runner package.}

\item{forecast_type}{Type of time series forecasts.}

\item{h}{Forecast horizont.}

\item{x}{Ohlcv object.}

\item{window}{Rolling window lengths.}

\item{price_col}{Prcie column in Ohlcv}

\item{params}{Vector of parameters}
}
\value{
A new `RollingForecats` object.

Calculate rolling radf features from exuber package.
}
\description{
Function calculates forecastas based on auto.arima and nnetar functions from forecast package.

Create a new RollingForecats object.

Function calculates radf values from exuber package on rolling window.
}
\section{Fields}{

\describe{
\item{\code{forecast_type}}{Type of forecast.}

\item{\code{h}}{Forecast horizont.}
}}

\examples{
data(spy_hour)
OhlcvInstance = Ohlcv$new(spy_hour, date_col = "datetime")
#arima
RollingForecatsInstance = RollingForecats$new(windows = c(10, 20),
                                              workers = 1L,
                                              lag = 1L,
                                              at = c(100:110, 200:210),
                                              forecast_type = "autoarima",
                                              h = 22)
x = RollingForecatsInstance$get_rolling_features(OhlcvInstance)
head(x)
# nnetar
RollingForecatsInstance = RollingForecats$new(windows = c(10, 20),
                                              workers = 2L,
                                              lag = 1L,
                                              at = c(100:110, 200:210),
                                              forecast_type = c("autoarima", "nnetar"),
                                              h = 10)
x = RollingForecatsInstance$get_rolling_features(OhlcvInstance)
head(x)
}
