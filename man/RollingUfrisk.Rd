% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RollingUfrisk.R
\name{RollingUfrisk}
\alias{RollingUfrisk}
\title{RollingUfrisk Class}
\arguments{
\item{windows}{Vector of windows that will be applied on features.}

\item{workers}{Number of workers. Greater than 1 for parallle processing}

\item{lag}{Lag variable in runner package.}

\item{at}{Argument at in runner package.}

\item{a_v}{Argument a.v in ufRisk package}

\item{a_e}{Argument a.e in ufRisk package}

\item{model}{Argument model in ufRisk package}

\item{garch_order}{Argument garch_order in ufRisk package}

\item{x}{Ohlcv object.}

\item{window}{Rolling window lengths.}

\item{price_col}{Prcie column in Ohlcv}

\item{params}{Vector of parameters}
}
\value{
A new `RollingQuarks` object.

Calculate rolling radf features from exuber package.
}
\description{
Function calculates risk measures (Var, ES) from ufRisk package on rolling window.

Create a new RollingExuber object.

Function calculates radf values from exuber package on rolling window.
}
\section{Fields}{

\describe{
\item{\code{a_v}}{Argument a.v in ufRisk package}

\item{\code{a_e}}{Argument a.e in ufRisk package}

\item{\code{model}}{Argument model in ufRisk package}

\item{\code{garch_order}}{Argument garchOrder in ufRisk package}
}}

\examples{
data(spy_hour)
OhlcvInstance = Ohlcv$new(spy_hour, date_col = "datetime")
RollingUfriskInit = RollingUfrisk$new(windows = 200,
                                      workers = 1L,
                                      at = c(300, 500),
                                      lag = 0L,
                                      a_v = 0.99,
                                      a_e = 0.975,
                                      model = "sGARCH",
                                      garch_order = c(1, 1))
x = RollingUfriskInit$get_rolling_features(OhlcvInstance)
head(x)
RollingUfriskInit = RollingUfrisk$new(windows = 200,
                                      workers = 2L,
                                      at = c(300, 500),
                                      lag = 0L,
                                      a_v = 0.99,
                                      a_e = 0.975,
                                      model = c("sGARCH", "eGARCH"),
                                      garch_order = c(1, 1))
x = RollingUfriskInit$get_rolling_features(OhlcvInstance)
head(x)
}
